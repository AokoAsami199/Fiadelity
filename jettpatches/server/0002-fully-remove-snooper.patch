From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Thu, 8 Jul 2021 12:40:00 -0400
Subject: [PATCH] fully remove snooper


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 8b0d5e08a74ec48b5cef43b9f1316eea94149d3f..492fc0aca3e2ff7a21eb0bfb1bcb81debcc1d825 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -120,8 +120,8 @@ import net.minecraft.util.profiling.metrics.profiling.ServerMetricsSamplersProvi
 import net.minecraft.util.profiling.metrics.storage.MetricsPersister;
 import net.minecraft.util.thread.ReentrantBlockableEventLoop;
 import net.minecraft.world.Difficulty;
-import net.minecraft.world.Snooper;
-import net.minecraft.world.SnooperPopulator;
+// import net.minecraft.world.Snooper;
+// import net.minecraft.world.SnooperPopulator;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.ai.village.VillageSiege;
 import net.minecraft.world.entity.npc.CatSpawner;
@@ -189,14 +189,14 @@ import org.bukkit.event.server.ServerLoadEvent;
 import co.aikar.timings.MinecraftTimings; // Paper
 import org.spigotmc.SlackActivityAccountant; // Spigot
 
-public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTask> implements SnooperPopulator, CommandSource, AutoCloseable {
+public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTask> implements CommandSource, AutoCloseable {
 
     private static MinecraftServer SERVER; // Paper
     public static final Logger LOGGER = LogManager.getLogger();
     private static final float AVERAGE_TICK_TIME_SMOOTHING = 0.8F;
     private static final int TICK_STATS_SPAN = 100;
     public static final int MS_PER_TICK = 50;
-    private static final int SNOOPER_UPDATE_INTERVAL = 6000;
+    // private static final int SNOOPER_UPDATE_INTERVAL = 6000;
     private static final int OVERLOADED_THRESHOLD = 2000;
     private static final int OVERLOADED_WARNING_INTERVAL = 15000;
     public static final String LEVEL_STORAGE_PROTOCOL = "level";
@@ -214,7 +214,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
     private static final long DELAYED_TASKS_TICK_EXTENSION = 50L;
     public LevelStorageSource.LevelStorageAccess storageSource;
     public final PlayerDataStorage playerDataStorage;
-    private final Snooper snooper = new Snooper("server", this, Util.getMillis());
+    // private final Snooper snooper = new Snooper("server", this, Util.getMillis());
     private final List<Runnable> tickables = Lists.newArrayList();
     private MetricsRecorder metricsRecorder;
     private ProfilerFiller profiler;
@@ -1090,9 +1090,11 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             }
         }
 
+        /*
         if (this.snooper.isStarted()) {
             this.snooper.interrupt();
         }
+        */
 
         this.resources.close();
 
@@ -1519,6 +1521,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             // MinecraftServer.LOGGER.debug("Autosave finished"); // Paper
         //} // Paper
 
+        /*
         this.profiler.push("snooper");
         if (((DedicatedServer) this).getProperties().snooperEnabled && !this.snooper.isStarted() && this.tickCount > 100) { // Spigot
             this.snooper.start();
@@ -1530,6 +1533,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
         io.papermc.paper.util.CachedLists.reset(); // Paper
         this.profiler.pop();
+        */
 
         // Paper start - move executeAll() into full server tick timing
         try (co.aikar.timings.Timing ignored = MinecraftTimings.processTasksTimer.startTiming()) {
@@ -1874,6 +1878,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         this.resourcePackHash = hash;
     }
 
+    /*
     @Override
     public void populateSnooper(Snooper snooper) {
         snooper.setDynamicData("whitelist_enabled", (Object) false);
@@ -1918,8 +1923,9 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
     @Override
     public boolean isSnooperEnabled() {
-        return true;
+        return false;
     }
+    */
 
     public abstract boolean isDedicatedServer();
 
@@ -2016,9 +2022,11 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         return this.tickCount;
     }
 
+    /*
     public Snooper getSnooper() {
         return this.snooper;
     }
+    */
 
     public int getSpawnProtectionRadius() {
         return 16;
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index e2901132b78126c0a4eb04363dfe6a0dccd1313f..0368832c4b8d71994c6307f9bbca22658ef831b3 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -496,19 +496,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
     @Override
     public boolean isNetherEnabled() {
         return this.getProperties().allowNether;
-    }
-
-    @Override
-    public void populateSnooper(Snooper snooper) {
-        snooper.setDynamicData("whitelist_enabled", (Object) this.getPlayerList().isUsingWhitelist());
-        snooper.setDynamicData("whitelist_count", (Object) this.getPlayerList().getWhiteListNames().length);
-        super.populateSnooper(snooper);
-    }
-
-    @Override
-    public boolean isSnooperEnabled() {
-        return this.getProperties().snooperEnabled;
-    }
+    }    
 
     public void handleConsoleInput(String command, CommandSourceStack commandSource) {
         this.serverCommandQueue.add(new ConsoleInput(command, commandSource));
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
index 0544ac93513d3a274bfb53bb6120bd598f4d603b..a350ae1716cb92647c30305f330df9ba049de183 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
@@ -43,7 +43,7 @@ public class DedicatedServerProperties extends Settings<DedicatedServerPropertie
     public final boolean hardcore;
     public final boolean allowNether;
     public final boolean spawnMonsters;
-    public final boolean snooperEnabled;
+    // public final boolean snooperEnabled;
     public final boolean useNativeTransport;
     public final boolean enableCommandBlock;
     public final int spawnProtection;
@@ -88,11 +88,13 @@ public class DedicatedServerProperties extends Settings<DedicatedServerPropertie
         this.hardcore = this.get("hardcore", false);
         this.allowNether = this.get("allow-nether", true);
         this.spawnMonsters = this.get("spawn-monsters", true);
+        /*
         if (this.get("snooper-enabled", true)) {
             ;
         }
 
         this.snooperEnabled = false;
+        */
         this.useNativeTransport = this.get("use-native-transport", true);
         this.enableCommandBlock = this.get("enable-command-block", false);
         this.spawnProtection = this.get("spawn-protection", 16);

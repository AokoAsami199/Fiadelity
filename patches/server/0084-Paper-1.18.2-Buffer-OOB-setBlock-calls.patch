From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Sat, 19 Mar 2022 12:12:22 +0000
Subject: [PATCH] (Paper-1.18.2) Buffer OOB setBlock calls

lets debug mode throw a trace in order to potentially see where
such calls are cascading from easier, but, generally, if you see one setBlock
call, you're gonna see more, and this just potentially causes a flood of logs
which can cause issues for slower terminals, etc.

We can limit the flood by just allowing one for a single gen region,
we'll also only gen a trace for the first one, I see no real pressing need
to generate more, given that that would *massively* negate this patch otherwise

diff --git a/src/main/java/net/minecraft/server/level/WorldGenRegion.java b/src/main/java/net/minecraft/server/level/WorldGenRegion.java
index cf1cb0996bb06ae7cf56e0ecf0c01f03da7fdd83..1fae3e15bd8383ec9313e809dab95e68fe027001 100644
--- a/src/main/java/net/minecraft/server/level/WorldGenRegion.java
+++ b/src/main/java/net/minecraft/server/level/WorldGenRegion.java
@@ -282,6 +282,7 @@ public class WorldGenRegion implements WorldGenLevel {
         }
     }
 
+    private boolean hasSetFarWarned = false; // Paper
     @Override
     public boolean ensureCanWrite(BlockPos pos) {
         int i = SectionPos.blockToSectionCoord(pos.getX());
@@ -292,7 +293,15 @@ public class WorldGenRegion implements WorldGenLevel {
         if (k <= this.writeRadiusCutoff && l <= this.writeRadiusCutoff) {
             return true;
         } else {
+            // Paper start
+            if (!hasSetFarWarned) {
             Util.logAndPauseIfInIde("Detected setBlock in a far chunk [" + i + ", " + j + "], pos: " + pos + ", status: " + this.generatingStatus + (this.currentlyGenerating == null ? "" : ", currently generating: " + (String) this.currentlyGenerating.get()));
+            hasSetFarWarned = true;
+            if (this.getServer() != null && this.getServer().isDebugging()) {
+                io.papermc.paper.util.TraceUtil.dumpTraceForThread("far setBlock call");
+            }
+            }
+            // Paper end
             return false;
         }
     }

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Thu, 8 Jul 2021 04:16:19 -0400
Subject: [PATCH] rebrand


diff --git a/src/main/java/com/destroystokyo/paper/Metrics.java b/src/main/java/com/destroystokyo/paper/Metrics.java
index f5d01bce4d5547b4aeca96b7962b2090f47ea541..31933a798a4f96eeada1cc011b3fa46a0d620596 100644
--- a/src/main/java/com/destroystokyo/paper/Metrics.java
+++ b/src/main/java/com/destroystokyo/paper/Metrics.java
@@ -593,7 +593,7 @@ public class Metrics {
             boolean logFailedRequests = config.getBoolean("logFailedRequests", false);
             // Only start Metrics, if it's enabled in the config
             if (config.getBoolean("enabled", true)) {
-                Metrics metrics = new Metrics("Airplane", serverUUID, logFailedRequests, Bukkit.getLogger()); // Tuinity - we have our own bstats page // Airplane
+                Metrics metrics = new Metrics("JettPack", serverUUID, logFailedRequests, Bukkit.getLogger()); // Tuinity - we have our own bstats page // Airplane // JettPack
 
                 metrics.addCustomChart(new Metrics.SimplePie("minecraft_version", () -> {
                     String minecraftVersion = Bukkit.getVersion();
@@ -603,7 +603,7 @@ public class Metrics {
 
                 metrics.addCustomChart(new Metrics.SingleLineChart("players", () -> Bukkit.getOnlinePlayers().size()));
                 metrics.addCustomChart(new Metrics.SimplePie("online_mode", () -> Bukkit.getOnlineMode() ? "online" : "offline"));
-                metrics.addCustomChart(new Metrics.SimplePie("airplane_version", () -> (Metrics.class.getPackage().getImplementationVersion() != null) ? Metrics.class.getPackage().getImplementationVersion() : "unknown")); // Tuinity - we have our own bstats page // Airplane
+                metrics.addCustomChart(new Metrics.SimplePie("jettpack_version", () -> (Metrics.class.getPackage().getImplementationVersion() != null) ? Metrics.class.getPackage().getImplementationVersion() : "unknown")); // Tuinity - we have our own bstats page // Airplane // JettPack
 
                 metrics.addCustomChart(new Metrics.DrilldownPie("java_version", () -> {
                     Map<String, Map<String, Integer>> map = new HashMap<>();
diff --git a/src/main/java/gg/airplane/AirplaneVersionFetcher.java b/src/main/java/gg/airplane/AirplaneVersionFetcher.java
index e79ec7919e6cf160fec1cb981d85f0f33c316b41..af72471c65f5364621773b4106a9a1acdca99b24 100644
--- a/src/main/java/gg/airplane/AirplaneVersionFetcher.java
+++ b/src/main/java/gg/airplane/AirplaneVersionFetcher.java
@@ -31,8 +31,8 @@ public class AirplaneVersionFetcher implements VersionFetcher {
     private static final Logger LOGGER = Logger.getLogger("AirplaneVersionFetcher");
     private static final HttpClient client = HttpClient.newHttpClient();
 
-    private static final URI JENKINS_URI = URI.create("https://ci.tivy.ca/job/Airplane-1.17/lastSuccessfulBuild/buildNumber");
-    private static final String GITHUB_FORMAT = "https://api.github.com/repos/TECHNOVE/Airplane/compare/ver/1.17...%s";
+    private static final URI JENKINS_URI = URI.create("https://www.gardling.com/jenkins/job/JettPack/lastStableBuild/buildNumber"); // Jettpack
+    // private static final String GITHUB_FORMAT = "https://api.github.com/repos/TECHNOVE/Airplane/compare/ver/1.17...%s";
 
     private static final HttpResponse.BodyHandler<JsonObject> JSON_OBJECT_BODY_HANDLER = responseInfo -> HttpResponse.BodySubscribers.mapping(
             HttpResponse.BodySubscribers.ofString(StandardCharsets.UTF_8),
@@ -57,7 +57,8 @@ public class AirplaneVersionFetcher implements VersionFetcher {
             try {
                 component = this.fetchJenkinsVersion(Integer.parseInt(versionString));
             } catch (NumberFormatException e) {
-                component = this.fetchGithubVersion(versionString.substring(1, versionString.length() - 1));
+                // component = this.fetchGithubVersion(versionString.substring(1, versionString.length() - 1)); // Jettpack
+                component = text("Unknown server version.", RED); // Jettpack - we use gitlab so ignore this
             }
         }
 
@@ -89,6 +90,7 @@ public class AirplaneVersionFetcher implements VersionFetcher {
         }
     }
 
+    /*
     // Based off code contributed by Techcable <Techcable@outlook.com> in Paper/GH-65
     private @NotNull Component fetchGithubVersion(final @NotNull String hash) {
         final URI uri = URI.create(String.format(GITHUB_FORMAT, hash));
@@ -108,11 +110,12 @@ public class AirplaneVersionFetcher implements VersionFetcher {
             return text("Failed to retrieve version from server.", RED);
         }
     }
+    */
 
     private @NotNull Component getResponseMessage(final int versionDiff) {
         return switch (Math.max(-1, Math.min(1, versionDiff))) {
             case -1 ->
-                text("You are running an unsupported version of Airplane.", RED);
+                text("You are running an unsupported version of Jettpack.", RED);
             case 0 ->
                 text("You are on the latest version!", GREEN);
             default ->
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 7120a77ec93009faf1f18fd6c9bc020de66a5f73..8b0d5e08a74ec48b5cef43b9f1316eea94149d3f 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1729,7 +1729,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
     @DontObfuscate
     public String getServerModName() {
-        return "Airplane"; // Airplane // Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
+        return "JettPack"; // JettPack // Airplane // Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
     }
 
     public SystemReport fillSystemReport(SystemReport details) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index c3a256d0ccb9fb44a5a1f9ffa2d48542ef4e857b..8f51514e4f3fcbbe3ec1fbccc7a0fb9fd32f49ff 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -251,7 +251,7 @@ import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
 
 public final class CraftServer implements Server {
-    private final String serverName = "Airplane"; // Paper // Airplane
+    private final String serverName = "JettPack"; // Paper // Airplane // JettPack
     private final String serverVersion;
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 1788d79ea489e446d3d9f541693d4ba3dfc26015..395cfa12651aa892829634e782584552cb3e6d3c 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/gg.airplane/airplane-api/pom.properties"); // Tuinity // Airplane
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/me.titaniumtown/jettpack-api/pom.properties"); // Tuinity // Airplane // JettPack
         Properties properties = new Properties();
 
         if (stream != null) {
